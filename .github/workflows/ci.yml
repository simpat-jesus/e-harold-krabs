name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # Docker-based test
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ hashFiles('**/Dockerfile*', '**/requirements.txt', '**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Create .env file for testing
      run: |
        cp .env.example .env

    - name: Build Docker images
      run: |
        docker compose build --build-arg BUILDKIT_INLINE_CACHE=1

    - name: Run tests in Docker
      run: |
        docker compose run --rm api pytest tests/ -v --tb=short

    - name: Test Docker Compose integration
      run: |
        docker compose up -d
        sleep 30
        curl -f http://localhost:8000/ || exit 1
        docker compose down
